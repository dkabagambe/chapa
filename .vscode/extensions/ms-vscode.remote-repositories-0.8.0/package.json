{
	"name": "remote-repositories",
	"private": true,
	"displayName": "%displayName%",
	"description": "%description%",
	"publisher": "ms-vscode",
	"version": "0.8.0",
	"license": "SEE LICENSE IN LICENSE",
	"engines": {
		"vscode": "^1.67.0-insider"
	},
	"browser": "./dist/browser/extension.js",
	"main": "./dist/extension.js",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/vscode-remote-repositories-github.git"
	},
	"bugs": {
		"url": "https://github.com/microsoft/vscode-remote-repositories-github/issues"
	},
	"categories": [
		"Other"
	],
	"enabledApiProposals": [
		"contribRemoteHelp",
		"contribMenuBarHome",
		"contribViewsRemote",
		"contribViewsWelcome",
		"documentFiltersExclusive",
		"extensionRuntime",
		"fileSearchProvider",
		"quickPickSortByLabel",
		"workspaceTrust",
		"notebookEditor",
		"scmSelectedProvider",
		"scmValidation",
		"textSearchProvider",
		"timeline"
	],
	"preview": true,
	"activationEvents": [
		"onFileSystem:vscode-vfs",
		"onFileSystem:github",
		"onFileSystem:azurerepos",
		"onFileSystem:vsck-fs",
		"onSearch:vscode-vfs",
		"onUri",
		"onCommand:remoteHub.openRepository",
		"onCommand:remoteHub.continueOn.openRepository",
		"onCommand:remoteHub.addRepositoryToWorkspace",
		"onCommand:remoteHub.continueOn.addRepositoryToWorkspace",
		"onCommand:remoteHub.deleteAllLocalRepositoryData",
		"onCommand:remoteHub.deleteLocalRepositoryData",
		"onCommand:remoteHub.enableDebugLogging",
		"onCommand:remoteHub.disableDebugLogging",
		"onCommand:remoteHub.exportDebugInfo",
		"onCommand:remoteHub.setContext",
		"onCommand:remoteHub.notebook.continueOn",
		"onCommand:remoteHub.remoteHelp.getStarted",
		"onView:remoteHub.views.workspaceRepositories",
		"onAuthenticationRequest:azurerepos"
	],
	"extensionKind": [
		"ui"
	],
	"capabilities": {
		"virtualWorkspaces": true,
		"untrustedWorkspaces": {
			"supported": true
		}
	},
	"contributes": {
		"virtualWorkspaces": {
			"menus": {
				"continueOn": [
					{
						"command": "remoteHub.openOnDesktop",
						"group": "navigation@0",
						"when": "false && isWeb && remoteHub:hasVirtualFolders"
					},
					{
						"command": "remoteHub.openOnWeb",
						"group": "navigation@0",
						"when": "false && !isWeb && remoteHub:hasVirtualFolders"
					},
					{
						"command": "remoteHub.clone",
						"group": "0_local@1",
						"when": "remoteHub:hasVirtualFolders"
					}
				]
			}
		},
		"configuration": {
			"title": "Remote Repositories",
			"properties": {
				"remoteHub.commitDirectlyWarning": {
					"type": "string",
					"default": "always",
					"enum": [
						"off",
						"auto",
						"always"
					],
					"enumDescriptions": [
						"%config.commitDirectlyWarning.off%",
						"%config.commitDirectlyWarning.auto%",
						"%config.commitDirectlyWarning.always%"
					],
					"markdownDescription": "%config.commitDirectlyWarning%",
					"scope": "window"
				},
				"remoteHub.experimental.useDiffMatchPatch": {
					"type": "boolean",
					"default": false,
					"scope": "application",
					"description": "%config.experimental.useDiffMatchPatch%"
				},
				"remoteHub.logLevel": {
					"type": "string",
					"default": "warn",
					"enum": [
						"off",
						"error",
						"warn",
						"info",
						"debug"
					],
					"enumDescriptions": [
						"%config.logLevel.off%",
						"%config.logLevel.error%",
						"%config.logLevel.warn%",
						"%config.logLevel.info%",
						"%config.logLevel.debug%"
					],
					"markdownDescription": "%config.logLevel%",
					"scope": "window"
				},
				"remoteHub.richNavigation.enabled": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%config.richNavigation.enabled%"
				},
				"remoteHub.richNavigation.indexMode": {
					"type": "object",
					"scope": "resource",
					"properties": {
						"branch": {
							"type": "string",
							"enum": [
								"none",
								"latest",
								"tipPlusLatest"
							],
							"enumDescriptions": [
								"%config.richNavigation.indexMode.none%",
								"%config.richNavigation.indexMode.latest%",
								"%config.richNavigation.indexMode.tipPlusLatest%"
							]
						}
					},
					"markdownDescription": "%config.richNavigation.indexMode%"
				},
				"remoteHub.search.download.sizeLimit": {
					"markdownDeprecationMessage": "Use `#remoteHub.indexing.cacheSizeLimit#`"
				},
				"remoteHub.indexing.cacheSizeLimit": {
					"markdownDeprecationMessage": "Use `#githubRepositories.indexing.cacheSizeLimit#`"
				},
				"remoteHub.search.download.repoLimit": {
					"markdownDeprecationMessage": "Use `#remoteHub.indexing.cacheRepoLimit#`"
				},
				"remoteHub.indexing.cacheRepoLimit": {
					"markdownDeprecationMessage": "Use `#githubRepositories.indexing.cacheRepoLimit`"
				},
				"remoteHub.indexing.maxIndexSize": {
					"markdownDeprecationMessage": "Use `#githubRepositories.indexing.maxIndexSize#`"
				},
				"remoteHub.indexing.verboseDownloadNotification": {
					"markdownDeprecationMessage": "Use `#githubRepositories.indexing.verboseDownloadNotification#`"
				},
				"remoteHub.staging.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%config.staging.enabled%"
				},
				"remoteHub.staging.smart": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%config.staging.smart%"
				},
				"remoteHub.experimental.prefetch": {
					"markdownDeprecationMessage": "Use `#githubRepositories.experimental.prefetch#`"
				},
				"remoteHub.experimental.fs.useTars": {
					"markdownDeprecationMessage": "Use `#githubRepositories.experimental.fs.useTars#`"
				},
				"remoteHub.experimental.useSimplifiedMerge": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%config.experimental.useSimplifiedMerge%"
				},
				"remoteHub.uncommittedChangesOnEntry": {
					"type": "string",
					"default": "promptIfBehind",
					"scope": "resource",
					"markdownDescription": "%config.uncommittedChangesOnEntry%",
					"enum": [
						"none",
						"promptIfBehind"
					],
					"enumDescriptions": [
						"%config.uncommittedChangesOnEntry.none%",
						"%config.uncommittedChangesOnEntry.promptIfBehind%"
					]
				}
			}
		},
		"commands": [
			{
				"command": "remoteHub.openRepository",
				"title": "%commands.openRepository%",
				"category": "%commands.category%",
				"icon": "$(repo)"
			},
			{
				"command": "remoteHub.continueOn.openRepository",
				"title": "%commands.continueOn.openRepository%",
				"category": "%commands.category%",
				"icon": "$(repo)"
			},
			{
				"command": "remoteHub.addRepositoryToWorkspace",
				"title": "%commands.addRepositoryToWorkspace%",
				"category": "%commands.category%",
				"icon": "$(folder-opened)"
			},
			{
				"command": "remoteHub.continueOn.addRepositoryToWorkspace",
				"title": "%commands.continueOn.addRepositoryToWorkspace%",
				"category": "%commands.category%",
				"icon": "$(folder-opened)"
			},
			{
				"command": "remoteHub.goToRepository",
				"title": "%commands.goToRepository%",
				"category": "%commands.category%",
				"icon": "$(globe)"
			},
			{
				"command": "remoteHub.openOnRemote",
				"title": "%commands.openOnRemote%",
				"category": "%commands.category%",
				"icon": "$(globe)"
			},
			{
				"command": "remoteHub.continueOn",
				"title": "%commands.continueOn%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.openOnDesktop",
				"title": "%commands.openOnDesktop%",
				"category": "%commands.category%",
				"icon": "$(vm)"
			},
			{
				"command": "remoteHub.openOnWeb",
				"title": "%commands.openOnWeb%",
				"category": "%commands.category%",
				"icon": "$(globe)"
			},
			{
				"command": "remoteHub.applyPatch",
				"title": "%commands.applyPatch%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.exportPatch",
				"title": "%commands.exportPatch%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.clone",
				"title": "%commands.clone%",
				"category": "%commands.category%",
				"icon": "$(repo-clone)"
			},
			{
				"command": "remoteHub.createBranch",
				"title": "%commands.createBranch%",
				"category": "%commands.category%",
				"icon": "$(add)"
			},
			{
				"command": "remoteHub.createBranchFrom",
				"title": "%commands.createBranchFrom%",
				"category": "%commands.category%",
				"icon": "$(add)"
			},
			{
				"command": "remoteHub.fetch",
				"title": "%commands.fetch%",
				"category": "%commands.category%",
				"icon": "$(sync)"
			},
			{
				"command": "remoteHub.pull",
				"title": "%commands.pull%",
				"category": "%commands.category%",
				"icon": "$(arrow-down)"
			},
			{
				"command": "remoteHub.switchToBranch",
				"title": "%commands.switchToBranch%",
				"category": "%commands.category%",
				"icon": "$(git-branch)"
			},
			{
				"command": "remoteHub.refresh",
				"title": "%commands.refresh%",
				"category": "%commands.category%",
				"icon": "$(refresh)"
			},
			{
				"command": "remoteHub.sync",
				"title": "%commands.sync%",
				"category": "%commands.category%",
				"icon": "$(sync)"
			},
			{
				"command": "remoteHub.configureIndexingAllowedRepos",
				"title": "%commands.configureIndexingAllowedRepos%",
				"category": "%commands.category%",
				"enablement": "gitHub:enabledSomeSearchIndexes"
			},
			{
				"command": "remoteHub.enableIndexing",
				"title": "%commands.enableIndexing%",
				"category": "%commands.category%",
				"enablement": "!gitHub:enabledAllSearchIndexes"
			},
			{
				"command": "remoteHub.disableIndexingForSession",
				"title": "%commands.disableIndexingForSession%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.deleteAllLocalRepositoryData",
				"title": "%commands.deleteAllLocalRepositoryData%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.deleteLocalRepositoryData",
				"title": "%commands.deleteLocalRepositoryData%",
				"category": "%commands.category%",
				"enablement": "gitHub:hasSearchIndexes"
			},
			{
				"command": "remoteHub.commit",
				"title": "%commands.commit%",
				"icon": "$(check)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.commitEmpty",
				"title": "%commands.commitEmpty%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.discardAllChanges",
				"title": "%commands.discardAllChanges%",
				"icon": "$(discard)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.discardChanges",
				"title": "%commands.discardChanges%",
				"icon": "$(discard)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.stageAllChanges",
				"title": "%commands.stageAllChanges%",
				"icon": "$(add)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.stageChanges",
				"title": "%commands.stageChanges%",
				"icon": "$(add)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.unstageAllChanges",
				"title": "%commands.unstageAllChanges%",
				"icon": "$(remove)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.unstageChanges",
				"title": "%commands.unstageChanges%",
				"icon": "$(remove)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.keepChanges",
				"title": "%commands.keepChanges%",
				"icon": "$(add)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.openChanges",
				"title": "%commands.openChanges%",
				"icon": "$(git-compare)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.openFile",
				"title": "%commands.openFile%",
				"icon": "$(go-to-file)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.createPullRequest",
				"title": "%commands.createPullRequest%",
				"icon": "$(git-pull-request-create)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.createDraftPullRequest",
				"title": "%commands.createDraftPullRequest%",
				"icon": "$(git-pull-request-create)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.openDiff",
				"title": "%commands.timeline.openDiff%",
				"icon": "$(compare-changes)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.openOnGitHub",
				"title": "%commands.timeline.openOnGitHub%",
				"icon": "$(globe)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.openOnAzureRepos",
				"title": "%commands.timeline.openOnAzureRepos%",
				"icon": "$(globe)",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.copyCommitId",
				"title": "%commands.timeline.copyCommitId%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.copyCommitMessage",
				"title": "%commands.timeline.copyCommitMessage%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.selectForCompare",
				"title": "%commands.timeline.selectForCompare%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.timeline.compareWithSelected",
				"title": "%commands.timeline.compareWithSelected%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.enableDebugLogging",
				"title": "%commands.enableDebugLogging%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.disableDebugLogging",
				"title": "%commands.disableDebugLogging%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.exportDebugInfo",
				"title": "%commands.exportDebugInfo%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.refresh",
				"title": "%commands.refresh%",
				"category": "%commands.category%",
				"icon": "$(refresh)"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.open",
				"title": "%commands.views.workspaceRepositories.open%",
				"category": "%commands.category%",
				"icon": "$(window)"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.openInNewWindow",
				"title": "%commands.views.workspaceRepositories.openInNewWindow%",
				"category": "%commands.category%",
				"icon": "$(empty-window)"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.openChanges",
				"title": "%commands.views.workspaceRepositories.openChanges%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.openFile",
				"title": "%commands.views.workspaceRepositories.openFile%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.applyAllChanges",
				"title": "%commands.views.workspaceRepositories.applyAllChanges%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.applyChanges",
				"title": "%commands.views.workspaceRepositories.applyChanges%",
				"category": "%commands.category%"
			},
			{
				"command": "remoteHub.views.workspaceRepositories.remove",
				"title": "%commands.views.workspaceRepositories.remove%",
				"category": "%commands.category%",
				"icon": "$(close)"
			},
			{
				"command": "remoteHub.notebook.continueOn",
				"title": "%commands.notebook.continueOn%",
				"category": "%commands.category%",
				"icon": "$(play)"
			},
			{
				"command": "remoteHub.remoteHelp.getStarted",
				"title": "%commands.remoteHelp.getStarted%"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "remoteHub.openRepository",
					"when": "!remoteName"
				},
				{
					"command": "remoteHub.continueOn.openRepository",
					"when": "false"
				},
				{
					"command": "remoteHub.addRepositoryToWorkspace",
					"when": "false && virtualWorkspace"
				},
				{
					"command": "remoteHub.continueOn.addRepositoryToWorkspace",
					"when": "false"
				},
				{
					"command": "remoteHub.goToRepository",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.openOnRemote",
					"when": "false"
				},
				{
					"command": "remoteHub.continueOn",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.openOnDesktop",
					"when": "false && isWeb && remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.openOnWeb",
					"when": "!isWeb && remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.clone",
					"when": "!isWeb && remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.createBranch",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.createBranchFrom",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.fetch",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.pull",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.switchToBranch",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.refresh",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.sync",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.commit",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.createPullRequest",
					"when": "remoteHub:hasVirtualFolders && !gitHub:hasPullRequestExtension || scmProvider == remoteHub:azurerepos"
				},
				{
					"command": "remoteHub.createDraftPullRequest",
					"when": "remoteHub:hasVirtualFolders && !gitHub:hasPullRequestExtension  || scmProvider == remoteHub:azurerepos"
				},
				{
					"command": "remoteHub.discardAllChanges",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.exportPatch",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.applyPatch",
					"when": "remoteHub:hasVirtualFolders"
				},
				{
					"command": "remoteHub.discardChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.stageAllChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.unstageAllChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.unstageChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.keepChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.openChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.openFile",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.openDiff",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.openOnGitHub",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.openOnAzureRepos",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.copyCommitId",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.copyCommitMessage",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.selectForCompare",
					"when": "false"
				},
				{
					"command": "remoteHub.timeline.compareWithSelected",
					"when": "false"
				},
				{
					"command": "remoteHub.enableDebugLogging",
					"when": "config.remoteHub.logLevel != debug"
				},
				{
					"command": "remoteHub.disableDebugLogging",
					"when": "config.remoteHub.logLevel != off && config.remoteHub.logLevel != error && config.remoteHub.logLevel != warn"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.refresh",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.open",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openFile",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.applyAllChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.applyChanges",
					"when": "false"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.remove",
					"when": "false"
				},
				{
					"command": "remoteHub.notebook.continueOn",
					"when": "false"
				},
				{
					"command": "remoteHub.remoteHelp.getStarted",
					"when": "false"
				}
			],
			"editor/title": [
				{
					"command": "remoteHub.openFile",
					"when": "remoteHub:hasVirtualFolders && isInDiffEditor && resourceScheme == vscode-vfs",
					"group": "navigation"
				}
			],
			"menuBar/home": [
				{
					"command": "remoteHub.goToRepository",
					"when": "remoteHub:hasVirtualFolders"
				}
			],
			"scm/title": [
				{
					"command": "remoteHub.commit",
					"group": "navigation@1",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"command": "remoteHub.createPullRequest",
					"group": "navigation@2",
					"when": "scmProvider =~ /^remoteHub:/ && !gitHub:hasPullRequestExtension || scmProvider == remoteHub:azurerepos"
				},
				{
					"command": "remoteHub.refresh",
					"group": "navigation@3",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"command": "remoteHub.pull",
					"group": "1_header@1",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"command": "remoteHub.fetch",
					"group": "1_header@2",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"submenu": "remoteHub/commit",
					"group": "2_main@1",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"submenu": "remoteHub/changes",
					"group": "2_main@2",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"submenu": "remoteHub/branch",
					"group": "2_main@3",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"submenu": "remoteHub/pullRequest",
					"group": "2_main@4",
					"when": "scmProvider =~ /^remoteHub:/"
				},
				{
					"submenu": "remoteHub/patch",
					"group": "2_main@5",
					"when": "scmProvider =~ /^remoteHub:/"
				}
			],
			"scm/resourceGroup/context": [
				{
					"command": "remoteHub.discardAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "inline@0"
				},
				{
					"command": "remoteHub.stageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.stageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && !config.remoteHub.experimental.useSimplifiedMerge",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.unstageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == staged && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.stageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.stageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && !config.remoteHub.experimental.useSimplifiedMerge",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.unstageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == staged && config.remoteHub.staging.enabled",
					"group": "1_modification@1"
				},
				{
					"command": "remoteHub.discardAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "1_modification@99"
				}
			],
			"scm/resourceFolder/context": [
				{
					"command": "remoteHub.discardChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|staged/",
					"group": "inline@2"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && !config.remoteHub.experimental.useSimplifiedMerge",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.unstageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == staged && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.discardChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|staged/",
					"group": "1_modification@1"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && config.remoteHub.experimental.useSimplifiedMerge",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.unstageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == staged && config.remoteHub.staging.enabled",
					"group": "1_modification@1"
				}
			],
			"scm/resourceState/context": [
				{
					"command": "remoteHub.openFile",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "inline@0"
				},
				{
					"command": "remoteHub.keepChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.experimental.useSimplifiedMerge",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.discardChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "inline@2"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && !config.remoteHub.experimental.useSimplifiedMerge",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.unstageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == staged && config.remoteHub.staging.enabled",
					"group": "inline@99"
				},
				{
					"command": "remoteHub.openChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "navigation@0"
				},
				{
					"command": "remoteHub.openFile",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "navigation@1"
				},
				{
					"command": "remoteHub.keepChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.experimental.useSimplifiedMerge",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == conflicts && config.remoteHub.staging.enabled && !config.remoteHub.experimental.useSimplifiedMerge",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.stageChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup == changes && config.remoteHub.staging.enabled",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.discardChanges",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "1_modification@1"
				},
				{
					"command": "remoteHub.exportPatch",
					"when": "scmProvider =~ /^remoteHub:/ && scmResourceGroup =~ /changes|conflicts|staged/",
					"group": "2_export@0"
				}
			],
			"statusBar/remoteIndicator": [
				{
					"command": "remoteHub.continueOn",
					"when": "remoteHub:hasVirtualFolders",
					"group": "virtualfs_44_vscode-vfs_0_local@1"
				},
				{
					"command": "remoteHub.continueOn.openRepository",
					"when": "!remoteName",
					"group": "virtualfs_44_vscode-vfs_1_open@1"
				},
				{
					"command": "remoteHub.continueOn.addRepositoryToWorkspace",
					"when": "virtualWorkspace && false",
					"group": "virtualfs_44_vscode-vfs_1_open@2"
				},
				{
					"command": "remoteHub.goToRepository",
					"when": "remoteHub:hasVirtualFolders",
					"group": "virtualfs_44_vscode-vfs_1_open@3"
				}
			],
			"timeline/item/context": [
				{
					"command": "remoteHub.timeline.openOnGitHub",
					"group": "inline",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:github:file:commit\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.openOnAzureRepos",
					"group": "inline",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:azurerepos:file:commit\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.openDiff",
					"group": "1_actions@1",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:(.+?):file\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.openOnGitHub",
					"group": "1_actions@2",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:github:file:commit\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.openOnAzureRepos",
					"group": "1_actions@2",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:azurerepos:file:commit\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.compareWithSelected",
					"group": "3_compare@1",
					"when": "remoteHub:hasVirtualFolders && remoteHub.timeline.selectedForCompare && timelineItem =~ /vscode-vfs:(.+?):file\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.selectForCompare",
					"group": "3_compare@2",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:(.+?):file\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.copyCommitId",
					"group": "5_copy@1",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:(.+?):file:commit\\b/ && !listMultiSelection"
				},
				{
					"command": "remoteHub.timeline.copyCommitMessage",
					"group": "5_copy@2",
					"when": "remoteHub:hasVirtualFolders && timelineItem =~ /vscode-vfs:(.+?):file:commit\\b/ && !listMultiSelection"
				}
			],
			"view/title": [
				{
					"command": "remoteHub.views.workspaceRepositories.refresh",
					"when": "view == remoteHub.views.workspaceRepositories",
					"group": "navigation@1"
				}
			],
			"view/item/context": [
				{
					"command": "remoteHub.views.workspaceRepositories.open",
					"alt": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepositories\\b/",
					"group": "inline@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.open",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepositories\\b/",
					"group": "navigation@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepositories\\b/",
					"group": "navigation@2"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.open",
					"alt": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b(?!.*?\\b\\+active\\b)/",
					"group": "inline@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b(?=.*?\\b\\+active\\b)/",
					"group": "inline@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.open",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b(?!.*?\\b\\+active\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openInNewWindow",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b/",
					"group": "navigation@2"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.applyAllChanges",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b(?=.*?\\b\\+apply\\b)/",
					"group": "1_modification@2"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.remove",
					"when": "viewItem =~ /remoteHub:viewItem:workspaceRepository\\b(?!.*?\\b\\+active\\b)/",
					"group": "8_actions@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openChanges",
					"when": "viewItem =~ /remoteHub:viewItem:change\\b/",
					"group": "navigation@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.openFile",
					"when": "viewItem =~ /remoteHub:viewItem:change\\b/",
					"group": "navigation@1"
				},
				{
					"command": "remoteHub.views.workspaceRepositories.applyChanges",
					"when": "viewItem =~ /remoteHub:viewItem:change\\b(?=.*?\\b\\+apply\\b)/",
					"group": "1_modification@1"
				}
			],
			"remoteHub/branch": [
				{
					"command": "remoteHub.createBranch",
					"group": "branch@1"
				},
				{
					"command": "remoteHub.createBranchFrom",
					"group": "branch@2"
				}
			],
			"remoteHub/changes": [
				{
					"command": "remoteHub.stageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && config.remoteHub.staging.enabled",
					"group": "changes@0"
				},
				{
					"command": "remoteHub.unstageAllChanges",
					"when": "scmProvider =~ /^remoteHub:/ && config.remoteHub.staging.enabled",
					"group": "changes@1"
				},
				{
					"command": "remoteHub.discardAllChanges",
					"when": "scmProvider =~ /^remoteHub:/",
					"group": "changes@99"
				}
			],
			"remoteHub/commit": [
				{
					"command": "remoteHub.commit",
					"group": "commit@1"
				}
			],
			"remoteHub/patch": [
				{
					"command": "remoteHub.applyPatch",
					"when": "scmProvider =~ /^remoteHub:/",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.exportPatch",
					"when": "scmProvider =~ /^remoteHub:/",
					"group": "1_modification@1"
				}
			],
			"remoteHub/pullRequest": [
				{
					"command": "remoteHub.createPullRequest",
					"when": "scmProvider =~ /^remoteHub:/ && !gitHub:hasPullRequestExtension || scmProvider == remoteHub:azurerepos",
					"group": "1_modification@0"
				},
				{
					"command": "remoteHub.createDraftPullRequest",
					"when": "scmProvider =~ /^remoteHub:/ && !gitHub:hasPullRequestExtension || scmProvider == remoteHub:azurerepos",
					"group": "1_modification@1"
				}
			],
			"notebook/cell/executePrimary": [
				{
					"command": "remoteHub.notebook.continueOn",
					"when": "isWeb && remoteHub:hasVirtualFolders && notebookType == jupyter-notebook && notebookKernelCount == 0",
					"group": "inline"
				}
			]
		},
		"submenus": [
			{
				"id": "remoteHub/branch",
				"when": "scmProvider =~ /^remoteHub:/",
				"label": "%submenu.branch%"
			},
			{
				"id": "remoteHub/changes",
				"when": "scmProvider =~ /^remoteHub:/",
				"label": "%submenu.changes%"
			},
			{
				"id": "remoteHub/commit",
				"when": "scmProvider =~ /^remoteHub:/",
				"label": "%submenu.commit%"
			},
			{
				"id": "remoteHub/patch",
				"when": "scmProvider =~ /^remoteHub:/",
				"label": "%submenu.patch%"
			},
			{
				"id": "remoteHub/pullRequest",
				"when": "scmProvider =~ /^remoteHub:/",
				"label": "%submenu.pullRequest%"
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "github",
				"authority": "{github,github+*}",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"workspaceSuffix": "GitHub",
					"stripPathStartingSeparator": true
				}
			},
			{
				"scheme": "vscode-vfs",
				"authority": "{github,github+*}",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"workspaceSuffix": "GitHub",
					"stripPathStartingSeparator": true
				}
			},
			{
				"scheme": "review",
				"authority": "{github,github+*}",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"workspaceSuffix": "GitHub",
					"stripPathStartingSeparator": true
				}
			},
			{
				"scheme": "vsck-fs",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"workspaceSuffix": "RichNav",
					"stripPathStartingSeparator": true
				}
			}
		],
		"views": {
			"remote": [
				{
					"id": "remoteHub.views.workspaceRepositories",
					"name": "Remote Repositories",
					"group": "targets@1",
					"remoteName": "virtualfs"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "explorer",
				"contents": "%viewsWelcome.explorer%",
				"when": "!isWeb && !remoteName",
				"group": "5_scm@2"
			},
			{
				"view": "explorer",
				"contents": "%viewsWelcome.explorer.web%",
				"when": "isWeb && !remoteName",
				"group": "5_scm@2"
			},
			{
				"view": "scm",
				"contents": "%viewsWelcome.scm.web%",
				"when": "!remoteHub:hasVirtualFolders && isWeb && !remoteName"
			},
			{
				"view": "debug",
				"contents": "%viewsWelcome.debug%",
				"when": "virtualWorkspace && !debuggersAvailable || isWeb && !remoteName && !debuggersAvailable"
			},
			{
				"view": "debug",
				"contents": "%viewsWelcome.debug.continueOn%",
				"when": "remoteHub:hasVirtualFolders"
			},
			{
				"view": "terminal",
				"contents": "%viewsWelcome.terminal%",
				"when": "virtualWorkspace || isWeb && !remoteName"
			},
			{
				"view": "terminal",
				"contents": "%viewsWelcome.terminal.continueOn%",
				"when": "remoteHub:hasVirtualFolders"
			},
			{
				"view": "remoteHub.views.workspaceRepositories",
				"contents": "%viewsWelcome.remoteExplorer%",
				"when": "!remoteHub:hasRecentRepositories"
			}
		],
		"remoteHelp": {
			"getStarted": "remoteHub.remoteHelp.getStarted",
			"feedback": "https://aka.ms/vscode-remote/remote-repositories/provide-feedback",
			"documentation": "https://aka.ms/vscode-remote/remote-repositories",
			"issues": "https://aka.ms/vscode-remote/remote-repositories/issues",
			"remoteName": "virtualfs"
		},
		"colors": [
			{
				"id": "remoteHub.decorations.addedForegroundColor",
				"description": "%colors.added%",
				"defaults": {
					"light": "#587c0c",
					"dark": "#81b88b",
					"highContrast": "#1b5225",
					"highContrastLight": "#374e06"
				}
			},
			{
				"id": "remoteHub.decorations.modifiedForegroundColor",
				"description": "%colors.modified%",
				"defaults": {
					"light": "#895503",
					"dark": "#E2C08D",
					"highContrast": "#E2C08D",
					"highContrastLight": "#895503"
				}
			},
			{
				"id": "remoteHub.decorations.deletedForegroundColor",
				"description": "%colors.deleted%",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#c74e39",
					"highContrastLight": "#ad0707"
				}
			},
			{
				"id": "remoteHub.decorations.conflictForegroundColor",
				"description": "%colors.conflict%",
				"defaults": {
					"light": "#ad0707",
					"dark": "#e4676b",
					"highContrast": "#c74e39",
					"highContrastLight": "#ad0707"
				}
			},
			{
				"id": "remoteHub.decorations.incomingAddedForegroundColor",
				"description": "%colors.incomingAdded%",
				"defaults": {
					"light": "#587c0c",
					"dark": "#81b88b",
					"highContrast": "#1b5225",
					"highContrastLight": "#374e06"
				}
			},
			{
				"id": "remoteHub.decorations.incomingModifiedForegroundColor",
				"description": "%colors.incomingModified%",
				"defaults": {
					"light": "#895503",
					"dark": "#E2C08D",
					"highContrast": "#E2C08D",
					"highContrastLight": "#895503"
				}
			},
			{
				"id": "remoteHub.decorations.incomingDeletedForegroundColor",
				"description": "%colors.incomingDeleted%",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#c74e39",
					"highContrastLight": "#ad0707"
				}
			},
			{
				"id": "remoteHub.decorations.incomingRenamedForegroundColor",
				"description": "%colors.incomingRenamed%",
				"defaults": {
					"light": "#007100",
					"dark": "#73C991",
					"highContrast": "#73C991",
					"highContrastLight": "#007100"
				}
			},
			{
				"id": "remoteHub.decorations.possibleConflictForegroundColor",
				"description": "%colors.possibleConflict%",
				"defaults": {
					"dark": "list.warningForeground",
					"light": "list.warningForeground",
					"highContrast": "list.warningForeground",
					"highContrastLight": "list.warningForeground"
				}
			},
			{
				"id": "remoteHub.decorations.workspaceRepositoriesView.hasUncommittedChangesForegroundColor",
				"description": "%colors.workspaceRepositoriesView.hasUncommittedChanges%",
				"defaults": {
					"light": "#895503",
					"dark": "#E2C08D",
					"highContrast": "#E2C08D",
					"highContrastLight": "#895503"
				}
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "package.json",
				"url": "./schemas/package.schema.json"
			}
		]
	},
	"scripts": {
		"bundle": "webpack --mode production --env esbuild",
		"clean": "npx rimraf .eslintcache* tsconfig*.tsbuildinfo dist *.vsix",
		"compile": "webpack --mode development --env esbuild",
		"compile:web": "webpack --mode development --config-name extension:webworker",
		"compile:test": "tsc --project tsconfig.test.json",
		"watch:test": "tsc -w --project tsconfig.test.json",
		"lint": "eslint --fix --cache --config .eslintrc.json --ignore-pattern src/env/browser/**/* src/**/*.ts",
		"lint:browser": "eslint --fix --cache --cache-location .eslintcache.browser --config .eslintrc.browser.json --ignore-pattern src/env/node/**/* src/**/*.ts",
		"package": "npx vsce package --yarn",
		"package-stable": "yarn run validate-stable && yarn run package",
		"package-prerelease": "yarn run patch-prerelease && npx vsce package --yarn --pre-release",
		"patch-prerelease": "node ./scripts/applyPatchForPrerelease.js",
		"pretty": "prettier --config .prettierrc --loglevel warn --write .",
		"pub": "npx vsce publish --yarn --noVerify",
		"serve": "npx serve --cors -l 5000",
		"tunnel": "npx localtunnel -p 5000",
		"resolve-alias": "tsc-alias -p tsconfig.test.json",
		"test": "yarn compile:test && yarn resolve-alias && node ./out/extensions/remotehub/src/test/runTests.js",
		"update-dts": "pushd \"src/@types\" && npx vscode-dts dev && popd",
		"validate-stable": "node ./scripts/validateStable.js",
		"watch": "webpack --watch --mode development --env esbuild"
	},
	"dependencies": {
		"@ungap/url-search-params": "0.2.2",
		"@vscode/extension-telemetry": "0.4.9",
		"abort-controller": "^3.0.0",
		"diff": "5.0.0",
		"diff-match-patch-typescript": "^1.0.8",
		"lodash.isequal": "^4.5.0",
		"node-diff3": "3.0.0",
		"node-fetch": "2.6.7",
		"path-browserify": "1.0.1",
		"process": "0.11.10",
		"promise-memoize": "1.2.1",
		"uuid": "^8.3.2",
		"vscode-languageserver-types": "3.16.0",
		"vscode-nls": "5.0.1"
	},
	"devDependencies": {
		"@types/chai": "^4.2.22",
		"@types/mocha": "^8.2.2",
		"@types/node": "14.14.45",
		"@types/pako": "1.0.2",
		"@types/promise-memoize": "^1.2.1",
		"@types/rimraf": "3.0.2",
		"@types/uuid": "^8.3.1",
		"@types/vscode": "^1.65.0",
		"@typescript-eslint/eslint-plugin": "4.32.0",
		"@typescript-eslint/parser": "4.32.0",
		"@vscode/test-electron": "^1.6.2",
		"chai": "^4.3.4",
		"esbuild": "0.13.3",
		"esbuild-loader": "2.15.1",
		"eslint": "7.32.0",
		"eslint-cli": "1.1.1",
		"eslint-config-prettier": "8.3.0",
		"eslint-import-resolver-webpack": "0.13.1",
		"eslint-plugin-import": "2.24.2",
		"event-stream": "^4.0.1",
		"fork-ts-checker-webpack-plugin": "6.3.3",
		"json5": "2.2.0",
		"mocha": "^9.0.1",
		"mocha-junit-reporter": "2.0.2",
		"mocha-multi-reporters": "1.1.7",
		"prettier": "2.4.1",
		"terser-webpack-plugin": "5.2.4",
		"ts-loader": "9.2.6",
		"ts-mockito": "^2.6.1",
		"tsc-alias": "1.3.10",
		"typescript": "4.4.3",
		"vscode-nls-dev": "^4.0.0",
		"webpack": "5.55.1",
		"webpack-cli": "4.2.0"
	},
	"__metadata": {
		"id": "cf5142f0-3701-4992-980c-9895a750addf",
		"publisherId": "5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee",
		"publisherDisplayName": "Microsoft",
		"targetPlatform": "undefined",
		"updated": true,
		"isPreReleaseVersion": false,
		"preRelease": false,
		"installedTimestamp": 1652289490051
	}
}